                    说    明
本程序基于同位网格采用有限体积法+相场模型求解不可压两相流
相场方程：采用CH方程，显式计算化学势ψ，并更新相场变量Φ
NS 方程：采用速度压力解耦的变系数投影算法                            
对流项处理采用五阶WENO格式，瞬态项采用BDF二阶差分 
当前网格允许LX ~= Ly ，但需要保证网格为正方形
1123 2 补充了面心速度矩阵，并借以离散"非一致3项"，采用统一的子函数离散，但Mome2中，实质为中心差分
1124 2 完成了全隐式求解Poisson方程，但只适用Neumann 梯度=0
1124 3 全隐引入边条求解Mome Step1 ，统一考虑固壁和左右滑移边条,实现了时间步长的无条件稳定
1124 4 通过调用插值函数替换Uf，但在连续性较好时暂时看不出区别
1124 5 【可计算密度比1000，但需要参数数值上很小0.001/1)】     
1125 2 修改了数据输出到Tecplot时，长宽不等即出错的情况
1125 3 【压力零点附近，压力不连续，诱导产生“相源”】
1128 1 引入BFA算法：目前测试为计算【Uf条件准确，相容易发散；Mome内部计算Uc中新旧算法暂无差异】
                Step1 增加，其后计算[Gx Gy]n,进而计算[uc_ss , vc_ss]
                Step2 不变。
                Step3 替换：[Gx Gy]n+1 & [uc_ss , vc_ss] 计算 [u,v]n+1  /体心速度计算完成
                Step4 计算面心速度： 
                      fstep1 将[uc_ss , vc_ss]线性插值到面心
                      fstep2 由[rho_n+1 , p_n , Gs_n+1,[uc_ss , vc_ss]] 计算 [ufs,vfs]
                      fstep3 由[rho_n+1,ppie]计算[uf,vf]n+1      /面心速度计算完成
1130 1 尝试分割矩阵，实现并行计算【1、可计算但误差大；2、突现无法添加左右壁面的驱动速度vleft/right】
       与乔师兄交流;【无法计算1:1000，是因为无量纲尺度不匹配，需要推导无量纲方程，统一尺度再计算】
1130 2 改进黏性项2，消除仅剩的循环，计算加速8% ；
       使用共轭梯度法（Conjugate Gradient）加速Mome...
       Step1的运算（满足对称正定），但不能直接用于Poison方程，后续可尝试预处理
1130 3 尝试协调量纲，计算1:1000 【不能施加任何外力，只能无外力静态计算】
1206 1 Plan：继续协调量纲 ； 修饰化学势 ； 无量纲算例验证 ； BFA算法修正
1207 1 Plan：无量纲算例定量验证 ；继续协调量纲 ； 修饰化学势 ； BFA算法修正
1207 2 RT失稳  RT1:0.333/1(128*512)   RT2:0.3/1(50*200) 
1209 1 RT失稳  0.333/1(128*512),定性对比吻合
1209 2 RT失稳  匹配无量纲时间 仅4000步，效过尚可，但似乎比文献变化慢 ； 界面粗，细节描述不好
1209 3 RT失稳  加密网格200*800
1209 4 RT失稳  加密网格200*800 ,调整Re数，At数量纲
1209 5 RT失稳  增加定量对比程序
1210 1 相界面守恒性验证 Pe=800,Co=0.1 2个周期
========================BFA V1 ===============================
1211 1 简化梳理程序至BFA V1  
       气泡上升1:2可以，1:10 不行
1213 1 尝试双滴算例
1214 1 尝试液滴分裂 加入剪切流动
1214 3 消除Eq_Phase的循环，加速5%
=======================BFA V2 =================================
1217 整理程序，尽可能通用化，尽可能提高计算效率：：：：归纳为BFA V2版本
=======================BFA V3-V5==================================
1229 删除Matrix_Laplace中多余的rho后，程序基本完成
通过用函数代替循环内的脚本，加快了5%以上的效率
优化 main 后，归纳为BFA V5版本
=======================BFA V6==================================
增加气泡定量对比程序；并让程序自动判断算例名，自动开启对应预处理
=======================BFA V8==================================
使用隐式算法计算CH方程，使用原始形式的化学势计算表面张力

20220311
修正了边界条件，特别是左右为周期边界时，修改对应的AuAv矩阵和b_const

20220330
Mome2 散度离散用中心差分 + 修正的RhieChow插值，但未考虑RHS瞬态项
切除了BFA算法部分

20220406
对二维程序的简洁性和可读性进行了优化：
使用全局函数句柄；
初始时定义边界元的位置向量，由于构造Au和L，避免了每次循环都重复计算位置信息；
面心速度函数将X和Y方向分开写；
使用统一的子函数计算bu和bv；

202204 03-05
完成了三维程序的编制，并初步调试完成；
待完善部分包括：
‘RhieChow插值’的引入；
‘黏性项二’的引入
 高阶面心速度的插值和读取；

202204 21-26
完成了 温度场+表面活性剂+润湿性 的表面张力控制
当前数理模型为：相场为[Liu]，Fs为[Liu],表活浓度输运为[Soligo]
{      
        %   方腔驱动测试RhieC 1-2-9效果对比，达到预期
        %   CH方程改为Ralson二阶推进
        %   将相场改回[-1,1] 进行计算
        %   红黑第一次尝试失败了
        %   加入表面活性剂 
        %   改变CH方程的化学势    、  表面张力表达(psi*Dphi和phi*Dpsi测试无区别？ Why) 
        %   norm(u(imin:imax,jmin:jmax),2) 检验HANCH
        %   实现：表面活性剂分布跟随phi
        %   浓度计算错误，无限超界
        %   完成浓度纠正，主要是cM，即迁移率不能太大；Soligo和Zong系统的cpsi结果基本一致
        %   sigma0和sigma要区分 ; CH Huang只计算基本Fs，拟用model Zong弱化Fs
        %   为更加简洁，修改了CH模型（Liu HH）
        %   修改模型CH和Fs后，sigma直接引入Fs计算，cs的作用也直观的表现了出来
        %   修改后，也未再出现复数，一阶段完成     

        %  磁场，完成60%
                                                         }
202205 25-30
完成了常系数矩阵的不可压NS方程算法。计算效率、时间步裕度以及伪势速度都比原常系数算法更优秀
{
        %  相场计算使用3阶TVD RK
        %  已初步实现常系数矩阵算法，通过chol和LU分解，实现快速求解
        %  (不需要将分解后的矩阵转 稀疏，64-300网格均无明显加速，且内存足够)
        %  不要求逆，稠密且卡死
        %  Mome1 pcg算法比chol分解后的两次直除快5倍,并可在算前完成预处理ichol（A)
        %  Mome2 泊松方程的LU分解解法，比直接解法快3-5倍
        %  相比变系数算法，加速30-40%
        %  注意Mome1右侧黏性项2的系数为负，前面的程序误写，注意检查更正
        %  对比原变系数算法，求解poison方程时（直接求解、LU分解、LU分解后求解）分别耗时5：50：1
        %  也就证明，如果可以将采用常系数算法，并完成预先LU分解，可在Poison方程节省80%的时间
        %  常系数算法求解RB benchmark在1.5秒左右崩散，原因调试发现 需将迁移率修改至1e-1
        %  RB10 稍快 ,M需在[5e-2,2e-1]，但均为条纹状化学势
        %  补充了转置黏性项，该项对计算有显著的影响，甚至消除了化学势条纹，不应忽略
        %  相比于变系数算法，迁移率应修改至1e-1
                                                           }
20220612
完善了边界条件的施加方式：
旧版：将边界条件分为 系数部分+常量部分 并分别在Au和b-bconst中处理；这种方式复杂，并且无法处理周期边界条件。
新版：其实“系数部分+常量部分”就等于aw*uw,直接将该部分右移到b中即可，这样仅需一次处理，且容易条件周期边界条件
（只需要知道外一层的速度即可）

20221018
重新考虑了程序结构：
1、通过读取.txt文件来进行不同算例的计算，避免每次都要把全部程序一起向外拷贝；
2、将数据文件分类（.dat和.mat）向单独的文件夹中存放；
3、程序文件可以分版本进行管理，读取不同的版本使用。
但上述想法目前没时间实现，需要抓紧进行3D程序的编写。
